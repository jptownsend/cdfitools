% Stimulus for vergence tracking with a moving frame and various options% Set up for Block Design with 6 sec prestimulus and 10 cycles of 24 sec for a total duration of 224 sec% Designed with 12 sec test and null periods for 3 sec TR% Frame rate could be divided by 2 to 0.125 (line 13) if the computer is fast enough% - it may help to use a smaller sizeDot (line 17) to save screen write time.clear all%Block Design ParametershalfPeriod = 12; % sec.  Duration of alternating test and null periodsnCycles = 18; secsToDiscard = 6; % secsecsCountDown = 5; % secdTPlan = 0.005; planFreq = round(1/dTPlan); % time sampling in the experimental plandT = 0.25;  % Frame rate in sec: Must be an even submultiple of 1 secsizeX = 140; % pixelssizeY = 100; % pixelssizeFix = 4; % pixelssizeDot = 4; % pixel sizedens = .1;dispMagn = 6; % disparity magnitude in pixelssterRect = [0,0,sizeDot*sizeX,sizeDot*sizeY];sizeXY = sizeX*sizeY;centerInd = (sizeX/2+0.5)*sizeY;choice = menu('Motion', 'step', 'sin');motionType = choice;choice = menu('Frequency', '0.33 Hz','1 Hz', '2 Hz');switch choicecase 1, period = 3;case 2, period = 1;case 3, period = 0.5;endperiod=3;%choice = menu('Fixation', 'square', 'nonius', 'both', 'none');fixType = 1;% choice = menu('Tracking', 'no', 'yes');% fixMov = choice-1;fixMov = 1; % trackingnHalfPeriodPlan = round(halfPeriod*planFreq);% exp plan sampled every dTPlan=5 msexpPlan = [+(1:nHalfPeriodPlan), -(1:nHalfPeriodPlan)]; % 1 cycleexpPlan = expPlan * halfPeriod/nHalfPeriodPlan;expPlan = kron(ones(1,nCycles+1),expPlan); % nCycles+1 cycles%expPlan(1:2*nHalfPeriodPlan) = -expPlan(1:2*nHalfPeriodPlan);	% to have null at the beginningexpPlan = expPlan((2*nHalfPeriodPlan+1-planFreq*secsToDiscard):end); % nCycles + secsToDiscard upfront% white dots, yellow fixationplaneClut{1} = 255*[0,0,0;1,1,1];planeClut{2} = 255*[0,0,0;1,1,1];planeClut{3} = 255*[0,0,0;1,1,0];plane0 = zeros(sizeY,sizeX);plane1 = ones(sizeY,sizeX);% making cluts for the movieclut{1} = CombineCluts(planeClut,[1,0,2]);clut{2} = CombineCluts(planeClut,[0,1,2]);Screen('Preference','Backgrounding',0)screenNumber=[1,2];for n = 1:2	window(n) = Screen(screenNumber(n),'OpenWindow',0);	Screen(window(n),'Preference','AskSetClutDriverToWaitForBlanking',1)	Screen(window(n),'Preference','DacBits',8);end% defining rectangleswindowRect = Screen(window(1),'Rect');sterRect = CenterRect(sterRect,windowRect);% preparing fixations% tmp = zeros(sizeY,sizeX);% tmp(sizeY/2-sizeFix/2+1:sizeY/2+sizeFix/2,sizeX/2-sizeFix/2+1:sizeX/2+sizeFix/2)=1;% tmp(sizeY/2-sizeFix/2+1,sizeX/2+sizeFix/2)=0;% tmp(sizeY/2-sizeFix/2+1,sizeX/2-sizeFix/2+1)=0;% tmp(sizeY/2+sizeFix/2,sizeX/2+sizeFix/2)=0;% tmp(sizeY/2+sizeFix/2,sizeX/2-sizeFix/2+1)=0;% fixInds{1} = find(tmp(:));	%squaretmp = zeros(sizeY,sizeX);tmp(sizeY/2-sizeFix/8+1:sizeY/2+sizeFix/8, sizeX/2-sizeFix/2+1:sizeX/2+sizeFix/2+1)=1;tmp(sizeY/2-sizeFix/2+1:sizeY/2+sizeFix/2+1, sizeX/2-sizeFix/8+1:sizeX/2+sizeFix/8)=1;fixInds{1} = find(tmp(:));	%cross fixationtmp = zeros(sizeY,sizeX);tmp(sizeY/2-2*sizeFix:sizeY/2-1,sizeX/2) = 1;fixInds{2} = find(tmp(:));	% nonius lefttmp = flipud(tmp);fixInds{3} = find(tmp(:));	% nonius rightfixInds{4} = union(fixInds{1},2*sizeFix*sizeY+fixInds{2}); % square+nonius leftfixInds{5} = union(fixInds{1},2*sizeFix*sizeY+fixInds{3}); % square+nonius rightplaneToBe{1} = plane0; planeToBe{2} = plane0;Screen('MatlabToFront')disp('Press any key and movie countdown will start immediately')time0 = GetSecs;toStart = 0;dt = 0;% while 1% 	time1 = GetSecs;% 	tmp = ceil(secsCountDown - time1 + time0);% 	if tmp < 0, break, end% 	if tmp ~= dt% 		dt = tmp;% 		for n=1:2% 			% put fixation% 			ster{n} = plane0;% 			if n == 1% 				ster{n}(fixInds{1}) = 4;% 			else% 				ster{n}(fixInds{1}) = 4;% 			end% 			Screen(window(n), 'PutImage', ster{n}, sterRect)% 			Screen(window(n), 'SetClut', clut{1});% 			if toStart == 0% 				Screen(window(n),'TextSize',24);% 				Screen(window(n),'DrawText','Awaiting a keypress',windowRect(3)/2-120,windowRect(4)/2-80,1);% 				Screen(window(n),'TextSize',16);% 				Screen(window(n),'DrawText','Q W E R T Y U I O P',windowRect(3)/2-80,windowRect(4)/2-50,1);% 				Screen(window(n),'TextSize',8);% 				Screen(window(n),'DrawText','Q W E R T Y U I O P',windowRect(3)/2-40,windowRect(4)/2-30,1);% 			else% 				Screen(window(n),'TextSize',32);% 				Screen(window(n),'DrawText',num2str(dt),windowRect(3)/2-10,windowRect(4)/2-30,1);% 			end% 		end% 		if toStart == 0% 			toStart = 1;% 			GetChar;% 			time0 = GetSecs;% 		end% 	end% endGetChar;tictime0 = GetSecs;t0 = time0;for k=1:1000000000	planeBeen{1} = planeToBe{1}; planeBeen{2} = planeToBe{2};	t1 = GetSecs;	t = t1 - t0;		nT = ceil(t*planFreq);	if nT > length(expPlan), break, end	planeToChange = rem(k,2);	% 	% making the disparity map% nHalfPeriodPlan% less than 0.01 s	switch motionType	case 1,		if expPlan(nT) < 0			dispMod = 0;		else			dispMod = mod(expPlan(nT), period);			if dispMod < period/2				dispMod = dispMagn;			else				dispMod = -dispMagn;			end		end	case 2,		if expPlan(nT) < 0			dispMod = 0;		else 			dispMod = dispMagn*sin(2*pi*expPlan(nT)/period);% 			dispMod = sign(dispMod)*dispMod^2		end	end	dispMod = round(dispMod);		if fixMov			dispFix = 0;	else		dispFix = -dispMod;	end% about .02-.03 s	planeToBe{1} = round(rand(sizeY,sizeX)-0.5+dens);	planeToBe{2} = planeToBe{1};	% about 0.01 s	for n=1:2		% add plane		ster{n} = planeBeen{n}*2^planeToChange+planeToBe{n}*2^(1-planeToChange);		switch fixType		case 1,			if n == 1				ster{n}(fixInds{1}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{1}-floor(dispFix/2)*sizeY) = 4;			end		case 2,			if n == 1				ster{n}(fixInds{2}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{3}-floor(dispFix/2)*sizeY) = 4;			end		case 3,			if n == 1				ster{n}(fixInds{4}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{5}-floor(dispFix/2)*sizeY) = 4;			end		end		ster{n} = [zeros(sizeY,10),ster{n},zeros(sizeY,10)];	end% about 0.08 s	for n=1:2		sterRectTmp = sterRect;		sterRectTmp(1) = sterRectTmp(1) - 40;		sterRectTmp(3) = sterRectTmp(3) + 40;		%sterRectTmp(3) = sterRectTmp(3) + 80;		if n == 1			sterRectTmp([1,3]) = sterRectTmp([1,3]) + sizeDot*floor(dispMod/2);		else			sterRectTmp([1,3]) = sterRectTmp([1,3]) - sizeDot*ceil(dispMod/2);		end		Screen(window(n), 'PutImage', ster{n}, sterRectTmp);	end	time1 = GetSecs;	if time1 - time0 > dT		error('Rate is too fast')	else		while 1			time1 = GetSecs;			if time1 - time0 > dT				time0 = time1;				break			end		end	end% less than 1 ms	Screen(window(1),'SetClut',clut{2-planeToChange});	Screen(window(2),'SetClut',clut{2-planeToChange});endtocclear allScreen('MatlabToFront')