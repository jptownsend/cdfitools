% This program presents a square of stereomotion in one corner of the array% alternating with a central fixation target% each condition is one halfPeriod in duration% The parameters as specified up in lines 16-54% To show the stereomotion in a bincularly uncorrelated base, set base = 8 at line 54% The sequence of stereomotion sauare locations prints out continuously and saves at the end% To suppress printing, add semicolon to lines 203 and 251clear alldisp('Attention!  Set monitors to 640 x 480, 60 Hz resolution')disp(' ')disp('If program is stopped or crashes, type "clear all" to reset')disp(' ')%halfPeriod = 4; %secshalfPeriod = 6;nCycles = 24;secsToDiscard = 4; %prestimulus delaysecsCountDown = 2;dTPlan = 0.005; planFreq = round(1/dTPlan); % time sampling in the experimental planspeed=menu('Frame rate?','Fast','Slow');if speed==1	dT = 0.125; %dynamic frame rate/s.  Should not be changed !!!! Original Gamlin setting was 0.25	sizeDot = 3; %pixel size of dynamic dots.  Original Gamlin setting was 5	sizeX = 140;  %Original Gamlin setting was 120	sizeY = 100;  %Original Gamlin setting was 100else	dT = 0.25; %dynamic frame rate/s.  	sizeDot = 4; %pixel size of dynamic dots.  	sizeX = 150; 	sizeY = 120;  end%sizeSter = 0.4; %size of the stereomotion squaresizeSter = 0.2; %size of the stereomotion squaresizeFix = 8; %number of pixels for fixation targetdens = .15;dispMagn = 4; %disparity magnitude%surfaceType = menu('Surface', 'plane', 'bar', 'quadrant');surfaceType = 3;%motionType = menu('Motion', 'step', 'sin');motionType = 2;choice = menu('Frequency', '0.33 Hz','1 Hz', '2 Hz');switch choicecase 1, period = 3;case 2, period = 1;case 3, period = 0.5;end%fixType = menu('Fixation', 'cross', 'nonius', 'both', 'none');ft = 1; %fixTypechoice = menu('Tracking', 'no', 'yes');fixMov = choice-1;%fixMov = 0;base = 0; %set base = 8 for binoc uncorr base fieldsterRect = [0,0,sizeDot*sizeX,sizeDot*sizeY];sizeXY = sizeX*sizeY;centerInd = (sizeX/2+0.5)*sizeY;nHalfPeriodPlan = round(halfPeriod*planFreq);% exp plan sampled every dTPlan=5 msexpPlan = [+(1:nHalfPeriodPlan), -(1:nHalfPeriodPlan)]; % 1 cycle, alternate fix probeexpPlan = [+(1:nHalfPeriodPlan), +(1:nHalfPeriodPlan)]; % 1 cycle, no fix periodexpPlan = expPlan * halfPeriod/nHalfPeriodPlan;expPlan = kron(ones(1,nCycles+1),expPlan); % nCycles+1 cycles%expPlan(1:2*nHalfPeriodPlan) = -expPlan(1:2*nHalfPeriodPlan);	% to have null at the beginningexpPlan = expPlan((2*nHalfPeriodPlan+1-planFreq*secsToDiscard):end); % nCycles + secsToDiscard upfront% white dots, yellow fixationplaneClut{1} = 255*[0,0,0;1,1,1];planeClut{2} = 255*[0,0,0;1,1,1];planeClut{3} = 255*[0,0,0;1,1,0];% ????plane0 = zeros(sizeY,sizeX);plane1 = ones(sizeY,sizeX);plane2 = plane1; plane2(round(sizeY*2/5)+1:round(sizeY*3/5),:) = 0;	% stripe%plane3 = base*plane1; plane3((round(2*sizeY/3)+1):end,(2*round(sizeX/3)+1):end) = 1;	% quadrantplane3 = base*plane1; plane3((1:round(sizeSter*sizeY)),(1:round(sizeSter*sizeX))) = 1;	% quadrant% making cluts for the movieclut{1} = CombineCluts(planeClut,[1,0,2]);clut{2} = CombineCluts(planeClut,[0,1,2]);Screen('Preference','Backgrounding',0);screenNumber=[1,2];for n = 1:2	window(n) = Screen(screenNumber(n),'OpenWindow',0);	Screen(window(n),'Preference','AskSetClutDriverToWaitForBlanking',1);	Screen(window(n),'Preference','DacBits',8);end% defining rectangleswindowRect = Screen(window(1),'Rect');sterRect = CenterRect(sterRect,windowRect);% preparing fixationstmp = zeros(sizeY,sizeX);tmp(sizeY/2-sizeFix/2+1:sizeY/2+sizeFix/2 , sizeX/2-sizeFix/8+1:sizeX/2+sizeFix/8)=1;tmp(sizeY/2-sizeFix/8+1:sizeY/2+sizeFix/8 , sizeX/2-sizeFix/2+1:sizeX/2+sizeFix/2)=1;fixInds{1} = find(tmp(:));	%cross fixation% tmp = zeros(sizeY,sizeX);% tmp(sizeY/2-sizeFix/2+1:sizeY/2+sizeFix/2,sizeX/2-sizeFix/2+1:sizeX/2+sizeFix/2)=1;% fixInds{1} = find(tmp(:));	%squaretmp = zeros(sizeY,sizeX);tmp(sizeY/2-2*sizeFix:sizeY/2-1,sizeX/2) = 1;fixInds{2} = find(tmp(:));	% nonius lefttmp = flipud(tmp);fixInds{3} = find(tmp(:));	% nonius rightfixInds{4} = union(fixInds{1},2*sizeFix*sizeY+fixInds{2}); % square+nonius leftfixInds{5} = union(fixInds{1},2*sizeFix*sizeY+fixInds{3}); % square+nonius rightplaneToBe{1} = plane0; planeToBe{2} = plane0;Screen('MatlabToFront')disp('Press any key and movie countdown will start immediately')time0 = GetSecs;toStart = 0;dt = secsCountDown;while 1	time1 = GetSecs;	tmp = ceil(1 - time1 + time0);	if tmp < 0, break, end	if tmp ~= dt		dt = tmp;		for n=1:2 %for the two screens			% put fixation			ster{n} = plane0;			if n == 1				ster{n}(fixInds{1}) = 4;			else				ster{n}(fixInds{1}) = 4;			end			Screen(window(n), 'PutImage', ster{n}, sterRect);			Screen(window(n), 'SetClut', clut{1});			if toStart == 0				Screen(window(n),'TextSize',24);				Screen(window(n),'DrawText','Awaiting a keypress',windowRect(3)/2-120,windowRect(4)/2-80,1);				Screen(window(n),'TextSize',16);				Screen(window(n),'DrawText','Q W E R T Y U I O P',windowRect(3)/2-80,windowRect(4)/2-50,1);				Screen(window(n),'TextSize',8);				Screen(window(n),'DrawText','Q W E R T Y U I O P',windowRect(3)/2-40,windowRect(4)/2-30,1);			else				Screen(window(n),'TextSize',32);				Screen(window(n),'DrawText',num2str(dt),windowRect(3)/2-10,windowRect(4)/2-30,1);			end		end		if toStart == 0			toStart = 1;			%GetChar;			time0 = GetSecs;		end	endendtictime0 = GetSecs;t0 = time0;expPlanOld=1;sterLoc = [];for k=1:1000000000	planeBeen{1} = planeToBe{1}; planeBeen{2} = planeToBe{2};	t1 = GetSecs;	t = t1 - t0;		nT = ceil(t*planFreq);	if nT > length(expPlan), break, end	planeToChange = rem(k,2);		% 	% making the disparity map	% nHalfPeriodPlan	% less than 0.01 s	switch motionType	case 1, %square jump		if expPlan(nT) < 0 % null epoch			if surfaceType == 1				dispMod = 0;			elseif surfaceType == 2				dispMod = 1;			elseif surfaceType == 3				dispMod = base;			end		else			if surfaceType == 3 %test epoch (square)				if expPlan(nT) < expPlanOld % This only happens at the resets					plane3 = base*plane1; %reinitializing plane3					plane3((1:round(sizeSter*sizeY)),(1:round(sizeSter*sizeX))) = 1;	% quadrant					yLoc=0; xLoc=0;					if rand>0.5 %randomizing the location of the square					 	yLoc = 1;						plane3 = flipud(plane3);					end					if rand>0.5					 	xLoc = 1;						plane3 = fliplr(plane3);					end					sterLoc = [sterLoc 2*xLoc+yLoc+1] %Location counter				end %if expPlan(nT)				expPlanOld = expPlan(nT); 			end			if dispMod < period/2				dispMod = 1;			else				dispMod = -1;			end		end %if expPlan(nT)		if surfaceType == 1 		   % plane			disp = round(dispMagn*dispMod)*plane1;		elseif surfaceType == 2 		% bar			disp = round(dispMagn*dispMod)*plane2;		elseif surfaceType == 3			%square 			disp = round(dispMagn*dispMod)*plane3;		end	case 2, %sinusoidal motion		if expPlan(nT) < 0  	% null epoch			if surfaceType == 1 % plane				dispMod = 0;			elseif surfaceType == 2 % bar				dispMod = 1;			elseif surfaceType == 3  % square				dispMod = base;			end			disp = round(dispMagn*dispMod)*plane3;					else   					% test epoch 			dispMod = sin(2*pi*expPlan(nT)/period + 1);			% 			dispMod = sign(dispMod)*dispMod^2			if surfaceType == 1		   % plane				disp = round(dispMagn*dispMod)*plane1;			elseif 	surfaceType == 2	% bar				disp = round(dispMagn*dispMod)*plane2;			elseif surfaceType == 3	 %test epoch (square)				if expPlan(nT) < expPlanOld % This only happens at the resets					plane3 = base*plane1; %reinitializing plane3					plane3((1:round(sizeSter*sizeY)),(1:round(sizeSter*sizeX))) = 1;	% quadrant					yLoc=0; xLoc=0;					if rand>0.5 %randomizing the location of the square					 	yLoc = 1;						plane3 = flipud(plane3);					end					if rand>0.5					 	xLoc = 1;						plane3 = fliplr(plane3);					end					sterLoc = [sterLoc 2*xLoc+yLoc+1] %Location counter				end %if expPlan(nT)				expPlanOld = expPlan(nT); 			end %if surfaceType			disp = round(dispMagn*dispMod)*plane3;					end %expPlan(nT)	end %switch motionType	if fixMov			dispFix = round(dispMagn*dispMod);	else		dispFix = 0;	end	% about .02-.03 s	planeToBe{1} = round(rand(sizeY,sizeX)-.5+dens);	planeToBe{2} = round(rand(sizeY,sizeX)-.5+dens);	inds0 = (1:sizeXY)';	inds1 = inds0 - sizeY*disp(:);	inds1 = max(inds1,1);	inds1 = min(inds1,sizeXY);	planeToBe{2}(inds1) = planeToBe{1}(inds0);		% about 0.01 s	for n=1:2		% add plane		ster{n} = planeBeen{n}*2^planeToChange+planeToBe{n}*2^(1-planeToChange);		if expPlan(nT) > 0			fixType = 4;		else			fixType = ft;		end		switch fixType		case 1,			if n == 1				ster{n}(fixInds{1}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{1}-ceil(dispFix/2)*sizeY) = 4;			end		case 2,			if n == 1				ster{n}(fixInds{2}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{3}-ceil(dispFix/2)*sizeY) = 4;			end		case 3,			if n == 1				ster{n}(fixInds{4}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{5}-ceil(dispFix/2)*sizeY) = 4;			end		end		%removes fixation during test runs (for eye movement measurement)		%		end		% put fixation		%		ster{n} = uint8(ster{n});		%		ster{n} = ones(sizeY,1)*mod(1:sizeX,2);	end	% about 0.08 s	%tic	for n=1:2		Screen(window(n), 'PutImage', ster{n}, sterRect);	end	%toc		time1 = GetSecs;	if time1 - time0 > dT		error('Rate is too fast')	else		while 1			time1 = GetSecs;			if time1 - time0 > dT				time0 = time1;				break			end		end	end	% less than 1 ms	Screen(window(1),'SetClut',clut{2-planeToChange});	Screen(window(2),'SetClut',clut{2-planeToChange});end %for ksterLocsave sterLoc sterLoctocclear allScreen('MatlabToFront')