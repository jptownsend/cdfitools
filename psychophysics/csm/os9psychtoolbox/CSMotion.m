activewire(1,'OpenDevice') % open device 1activewire(1,'SetDirection',[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]) % set all I/O lines to input%Cycle=Period/2;halfPeriod = 32;%'period'= a block of test-null1-test-null2nCycles = 6;  %a cycle (test-null) is equal to half a 'period' in this doubled paradigm (test-null1-test-null2)nPeriods=nCycles/2;secsToDiscard = 12; %set to match dummies and calib scan total time. TR 4 then 3 dummiessecsCountDown = 5;dTPlan = 0.005; planFreq = round(1/dTPlan); % time sampling in the experimental plandT = 0.125;	% must not be changed !!!!!!!!!!sizeX = 140;sizeY = 100;%sizeFix = 8;sizeFix = 4;sizeDot = 4; dens = .1;dispMagn = 10;sterRect = [0,0,sizeDot*sizeX,sizeDot*sizeY];sizeXY = sizeX*sizeY;centerInd = ((sizeX/2)+0.5)*sizeY;choice = menu('Stimulus','1 Hz CSM1 ','1 Hz CSM2','0.5 Hz CSM1','2 Hz CSM1','0.33 Hz CSM1','0.66 Hz CSM1','0.8 Hz CSM1','2Hz CSM2');switch choicecase 1, surfaceType = 1; nullType=1; motionType = 1, period = 1, fixType = 1, dispMagn=6case 2, surfaceType = 1; nullType=2; motionType = 1, period = 1, fixType = 1, dispMagn=6case 3, surfaceType = 1; nullType=1; motionType = 1, period = 2, fixType = 1, dispMagn=6case 4, surfaceType = 1; nullType=1; motionType = 1, period = 0.5, fixType = 1, dispMagn=6case 5, surfaceType = 1; nullType=1; motionType = 1, period = 3, fixType = 1, dispMagn=6case 6, surfaceType = 1; nullType=1; motionType = 1, period = 1/0.666666, fixType = 1, dispMagn=6case 7, surfaceType = 1; nullType=1; motionType = 1, period = 1/0.8, fixType = 1, dispMagn=6case 8, surfaceType = 1; nullType=2; motionType = 1, period = 2, fixType = 1, dispMagn=6endfixMov = 0; %does this move the fix pt (flag)???!!? nHalfPeriodPlan = round(halfPeriod*planFreq);% exp plan sampled every dTPlan=5 msexpPlan = [+(1:nHalfPeriodPlan), -(1:nHalfPeriodPlan)]; % 1 cycleexpPlan = expPlan * halfPeriod/nHalfPeriodPlan;expPlan = kron(ones(1,nPeriods+1),expPlan); % nCycles+1 cyclesexpPlan = expPlan((2*nHalfPeriodPlan+1-planFreq*secsToDiscard):end); % nCycles + secsToDiscard upfront% white dots, colored fixation  R G BplaneClut{1} = 255*[0,0,0;1,1,1];planeClut{2} = 255*[0,0,0;1,1,1];planeClut{3} = 255*[0,0,0;1,0.8,0.2];plane0 = zeros(sizeY,sizeX);plane1 = ones(sizeY,sizeX);plane2 = plane1; plane2(round(sizeY*2/5)+1:round(sizeY*3/5),:) = 0;% making cluts for the movieclut{1} = CombineCluts(planeClut,[1,0,2]);clut{2} = CombineCluts(planeClut,[0,1,2]);%msb Screen('Preference','Backgrounding',0)screenNumber=[1,2];for n = 1:2	window(n) = Screen(screenNumber(n),'OpenWindow',0);	%Screen(window(n),'Preference','AskSetClutDriverToWaitForBlanking',1)	oldBool=Screen(window(n),'Preference','SetClutDriverWaitsForBlanking',0)	Screen(window(n),'Preference','DacBits',8);end% defining rectangleswindowRect = Screen(window(1),'Rect');sterRect = CenterRect(sterRect,windowRect);% preparing fixations% tmp = zeros(sizeY,sizeX);% tmp(sizeY/2-sizeFix/2+1:sizeY/2+sizeFix/2,sizeX/2-sizeFix/2+1:sizeX/2+sizeFix/2)=1;% fixInds{1} = find(tmp(:));	%squaretmp = zeros(sizeY,sizeX);tmp(sizeY/2, sizeX/2-4:sizeX/2+4)=1;tmp(sizeY/2-4:sizeY/2+4, sizeX/2)=1;fixInds{1} = find(tmp(:));	%cross fixationtmp = zeros(sizeY,sizeX);tmp(sizeY/2-2*sizeFix:sizeY/2-1,sizeX/2) = 1;fixInds{2} = find(tmp(:));	% nonius lefttmp = flipud(tmp);fixInds{3} = find(tmp(:));	% nonius rightfixInds{4} = union(fixInds{1},2*sizeFix*sizeY+fixInds{2}); % square+nonius leftfixInds{5} = union(fixInds{1},2*sizeFix*sizeY+fixInds{3}); % square+nonius rightplaneToBe{1} = plane0; planeToBe{2} = plane0;Screen('MatlabToFront')disp('Press any key')time0 = GetSecs;toStart = 0;dt = secsCountDown;% while 1% 	time1 = GetSecs;% 	tmp = ceil(6 - time1 + time0);% 	if tmp < 0, break, end% 	if tmp ~= dt% 		dt = tmp;% 		for n=1:2% 			% put fixation% 			ster{n} = plane0;% 			if n == 1% 				ster{n}(fixInds{1}) = 4;% 			else% 				ster{n}(fixInds{1}) = 4;% 			end% 			Screen(window(n), 'PutImage', ster{n}, sterRect)% 			Screen(window(n), 'SetClut', clut{1});% 			if toStart == 0% 				Screen(window(n),'TextSize',24);% 				Screen(window(n),'DrawText','Awaiting a keypress',windowRect(3)/2-120,windowRect(4)/2-80,1);% 				Screen(window(n),'TextSize',16);% 				Screen(window(n),'DrawText','Q W E R T Y U I O P',windowRect(3)/2-80,windowRect(4)/2-50,1);% 				Screen(window(n),'TextSize',8);% 				Screen(window(n),'DrawText','Q W E R T Y U I O P',windowRect(3)/2-40,windowRect(4)/2-30,1);% 			else% 				Screen(window(n),'TextSize',32);% 				Screen(window(n),'DrawText',num2str(dt),windowRect(3)/2-10,windowRect(4)/2-30,1);% 			end% 		end% 		if toStart == 0% 			toStart = 1;% 			GetChar;% 			time0 = GetSecs;% 		end% 	end% endGetChar; %wait for keypresstictime0 = GetSecs;t0 = time0;for k=1:1000000000	planeBeen{1} = planeToBe{1}; planeBeen{2} = planeToBe{2};	t1 = GetSecs;	t = t1 - t0;		nT = ceil(t*planFreq);	if nT > length(expPlan), break, end	planeToChange = rem(k,2);	% less than 0.01 s	switch motionType;	case 1, % step CSM stereomotion		if abs(expPlan(nT)) > max(expPlan)/2  			if surfaceType == 1 				if nullType==1 % CSM1					dispMod = 0;				else % nullType=2; CSM2					dispMod = sign(expPlan(nT));				end			else				dispMod = 1;			end		else			dispMod = mod(expPlan(nT), period);			if dispMod < period/2				dispMod = 1;			else				dispMod = -1;			end		end		dFactor = round(dispMagn*dispMod);		if surfaceType == 1			disp = dFactor*plane1;		else			disp = dFactor*plane2;		end	case 2,  %sinusoidal stereomotion		expPlan(nT)		if expPlan(nT) < 0			if surfaceType == 1				dispMod = 0;			else				dispMod = 1;			end		else 			dispMod = sin(2*pi*expPlan(nT)/period);		end		dFactor = round(dispMagn*dispMod);		if surfaceType == 1			disp = dFactor*plane1;		else			disp = dFactor*plane2;		end	end		if fixMov			dispFix = round(dispMagn*dispMod);	else		dispFix = 0;		dispFix = -10;  % hey dude, move fix disp here	end% about .02-.03 s	planeToBe{1} = round(rand(sizeY,sizeX)-.5+dens);	planeToBe{2} = round(rand(sizeY,sizeX)-.5+dens);	inds0 = (1:sizeXY)';    inds1 = inds0 - sizeY*disp(:);    inds1 = max(inds1,1);    inds1 = min(inds1,sizeXY);	planeToBe{2}(inds1) = planeToBe{1}(inds0);	% about 0.01 s	for n=1:2				ster{n} = planeBeen{n}*2^planeToChange+planeToBe{n}*2^(1-planeToChange);		switch fixType;		case 1,			if n == 1				ster{n}(fixInds{1}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{1}-ceil(dispFix/2)*sizeY) = 4;			end		case 2,			if n == 1				ster{n}(fixInds{2}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{3}-ceil(dispFix/2)*sizeY) = 4;			end		case 3,			if n == 1				ster{n}(fixInds{4}+floor(dispFix/2)*sizeY) = 4;			else				ster{n}(fixInds{5}-ceil(dispFix/2)*sizeY) = 4;			end		end	end%  hooow long, hooow long, has this been goin on..   how long?portValue= activewire(1,'GetPort'); %is monkey fixating?	% about 0.08 sportValue(1)=1;  % uncomment to disable stimulus gating aka blankingif portValue(1) == 1 % if the digital input line is high	for n=1:2		Screen(window(n), 'PutImage', ster{n}, sterRect); % show stuff	endelse	for n=1:2		Screen(window(n), 'FillRect',0); % dont show stuff	end	end	time1 = GetSecs;	if time1 - time0 > dT%		error('Rate is too fast')	else		while 1			time1 = GetSecs;			if time1 - time0 > dT				time0 = time1;				break			end		end	end% less than 1 ms	Screen(window(1),'SetClut',clut{2-planeToChange});	Screen(window(2),'SetClut',clut{2-planeToChange});endtocScreen('MatlabToFront')clear all%activewire(1,'CloseDevice')